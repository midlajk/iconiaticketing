<%- include('./components/head.ejs') -%>

<body>
  <!-- Sidebar -->
  <%- include('./components/navigation.ejs') -%>

  <!-- Content Wrapper -->
  <div id="content">
    <!-- Top Navigation -->
    <nav class="topbar">
      <div class="d-flex align-items-center">
        <button class="mobile-menu-toggle me-3" id="mobileMenuToggle">
          <i class="fas fa-bars"></i>
        </button>
        <h1 class="page-title mb-0">Create New Ticket</h1>
      </div>
      <div class="user-menu">
        <div class="dropdown">
          <a href="#" class="d-flex align-items-center text-decoration-none dropdown-toggle" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            <span class="me-2 d-none d-sm-inline fw-bold">John Doe</span>
            <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="User" class="user-avatar">
          </a>
          <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="userDropdown">
            <li><a class="dropdown-item" href="#"><i class="fas fa-user me-2"></i> Profile</a></li>
            <li><a class="dropdown-item" href="#"><i class="fas fa-bell me-2"></i> Notifications</a></li>
            <li><a class="dropdown-item" href="#"><i class="fas fa-cog me-2"></i> Settings</a></li>
            <li><hr class="dropdown-divider"></li>
            <li><a class="dropdown-item" href="#"><i class="fas fa-sign-out-alt me-2"></i> Logout</a></li>
          </ul>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <div class="container-fluid p-4">
      <div class="row justify-content-center">
        <div class="col-xl-8 col-lg-10">
          <!-- Alert for form submission status -->
          <div id="alertContainer" class="mb-4" style="display: none;">
            <div class="alert alert-dismissible fade show" role="alert">
              <span id="alertMessage"></span>
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          </div>

          <!-- Ticket Type Selection Card -->
          <div class="card mb-4">
            <div class="card-header">
              <h5 class="mb-0">Select Ticket Type</h5>
            </div>
            <div class="card-body">
              <div class="row g-3">
                <div class="col-md-6">
                  <div class="form-floating">
                    <select class="form-select" id="ticketType" name="ticketType">
                      <option value="GeneralTicket" selected>General Ticket</option>
                      <option value="BackupRequest">Backup Request</option>
                      <option value="ChangeRequest">Change Request</option>
                      <option value="ExitClearance">Exit Clearance</option>
                      <option value="IncidentReport">Incident Report</option>
                      <option value="DataBreach">Data Breach Notification</option>
                      <option value="NewUserCreation">New User Creation</option>
                    </select>
                    <label for="ticketType">Ticket Type</label>
                  </div>
                </div>
                <div class="col-md-6">
                  <button id="continueButton" class="btn btn-primary w-100 h-100">
                    <i class="fas fa-arrow-right me-2"></i> Continue
                  </button>
                </div>
              </div>
            </div>
          </div>

          <!-- General Ticket Form (Default) -->
          <div class="card" id="generalTicketForm">
            <div class="card-header d-flex justify-content-between align-items-center">
              <h5 class="mb-0">General Ticket</h5>
              <span class="badge bg-primary">Default</span>
            </div>
            <div class="card-body">
              <form id="ticketForm" enctype="multipart/form-data">
                <!-- Title -->
                <div class="mb-4">
                  <label for="title" class="form-label">Title</label>
                  <input type="text" class="form-control form-control-lg" id="title" name="title" placeholder="Briefly describe your issue" required>
                  <div class="invalid-feedback">Please provide a title for your ticket.</div>
                </div>
                
                <!-- Priority -->
                <div class="mb-4">
                  <label class="form-label">Priority</label>
                  <div class="btn-group w-100" role="group">
                    <input type="radio" class="btn-check" name="priority" id="priority-low" value="Low" autocomplete="off">
                    <label class="btn btn-outline-success" for="priority-low">
                      <i class="fas fa-arrow-down me-2"></i>Low
                    </label>

                    <input type="radio" class="btn-check" name="priority" id="priority-medium" value="Medium" autocomplete="off" checked>
                    <label class="btn btn-outline-warning" for="priority-medium">
                      <i class="fas fa-equals me-2"></i>Medium
                    </label>

                    <input type="radio" class="btn-check" name="priority" id="priority-high" value="High" autocomplete="off">
                    <label class="btn btn-outline-danger" for="priority-high">
                      <i class="fas fa-arrow-up me-2"></i>High
                    </label>
                  </div>
                </div>
                
                <!-- Description -->
                <div class="mb-4">
                  <label for="description" class="form-label">Description</label>
                  <textarea class="form-control" id="description" name="description" rows="5" placeholder="Please describe your issue in detail..." required></textarea>
                  <div class="invalid-feedback">Please provide a description of your issue.</div>
                </div>
                
                <!-- Requestor Information -->
                <div class="card mb-4">
                  <div class="card-header">
                    <h6 class="mb-0">Requestor Information</h6>
                  </div>
                  <div class="card-body">
                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <label for="requestorName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="requestorName" name="requestor.name" required>
                        <div class="invalid-feedback">Please enter your name.</div>
                      </div>
                      <div class="col-md-6 mb-3">
                        <label for="requestorEmpId" class="form-label">Customer ID</label>
                        <input type="text" class="form-control" id="requestorEmpId" name="requestor.empId" required>
                        <div class="invalid-feedback">Please enter your customer ID.</div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Attachments -->
                <div class="mb-4">
                  <label class="form-label">Attachments</label>
                  <div class="file-upload-area p-4 border rounded text-center">
                    <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
                    <h5>Drag and drop files here</h5>
                    <p class="text-muted">or click to browse files</p>
                    <input type="file" id="fileInput" name="attachments" multiple class="d-none">
                    <button type="button" class="btn btn-outline-primary mt-2" id="browseFilesBtn">
                      <i class="fas fa-folder-open me-2"></i>Browse Files
                    </button>
                  </div>
                  <div id="fileList" class="mt-3"></div>
                </div>
                
                <!-- Submit Buttons -->
                <div class="d-flex justify-content-end gap-3">
                  <button type="button" class="btn btn-outline-secondary" id="cancelButton">
                    Cancel
                  </button>
                  <button type="submit" class="btn btn-primary" id="submitButton">
                    <i class="fas fa-ticket-alt me-2"></i> Create Ticket
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Loading Overlay -->
  <div id="loadingOverlay" class="position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center bg-dark bg-opacity-50" style="display: none !important; z-index: 9999;">    <div class="spinner-border text-light" role="status" style="width: 3rem; height: 3rem;">
      <span class="visually-hidden">Loading...</span>
    </div>
  </div>

  <!-- Bootstrap JS Bundle with Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Get form elements
      const ticketForm = document.getElementById('ticketForm');
      const alertContainer = document.getElementById('alertContainer');
      const alertMessage = document.getElementById('alertMessage');
      const loadingOverlay = document.getElementById('loadingOverlay');
      const submitButton = document.getElementById('submitButton');
      
      // File upload handling
      const fileUploadArea = document.querySelector('.file-upload-area');
      const fileInput = document.getElementById('fileInput');
      const browseFilesBtn = document.getElementById('browseFilesBtn');
      const fileList = document.getElementById('fileList');
      
      // Click on area or button to trigger file input
      fileUploadArea.addEventListener('click', function() {
        fileInput.click();
      });
      
      browseFilesBtn.addEventListener('click', function(e) {
        e.stopPropagation();
        fileInput.click();
      });
      
      // Drag and drop effects
      fileUploadArea.addEventListener('dragover', function(e) {
        e.preventDefault();
        this.classList.add('bg-light');
      });
      
      fileUploadArea.addEventListener('dragleave', function() {
        this.classList.remove('bg-light');
      });
      
      fileUploadArea.addEventListener('drop', function(e) {
        e.preventDefault();
        this.classList.remove('bg-light');
        
        if (e.dataTransfer.files.length) {
          fileInput.files = e.dataTransfer.files;
          updateFileList();
        }
      });
      
      // File input change handler
      fileInput.addEventListener('change', updateFileList);
      
      // Update file list display
      function updateFileList() {
        fileList.innerHTML = '';
        
        if (fileInput.files.length > 0) {
          const listGroup = document.createElement('div');
          listGroup.className = 'list-group';
          
          for (let i = 0; i < fileInput.files.length; i++) {
            const file = fileInput.files[i];
            const fileSize = (file.size / 1024).toFixed(1); // KB
            
            const listItem = document.createElement('div');
            listItem.className = 'list-group-item d-flex align-items-center';
            listItem.innerHTML = `
              <i class="${getFileIcon(file.name)} me-3 text-primary"></i>
              <div class="flex-grow-1">
                <div class="d-flex justify-content-between">
                  <span class="text-truncate" style="max-width: 250px;">${file.name}</span>
                  <small class="text-muted">${fileSize} KB</small>
                </div>
              </div>
              <button type="button" class="btn btn-sm btn-link text-danger remove-file" data-index="${i}">
                <i class="fas fa-times"></i>
              </button>
            `;
            
            listGroup.appendChild(listItem);
          }
          
          fileList.appendChild(listGroup);
          
          // Add event listeners to remove buttons
          document.querySelectorAll('.remove-file').forEach(button => {
            button.addEventListener('click', function() {
              const index = parseInt(this.getAttribute('data-index'));
              removeFile(index);
            });
          });
        }
      }
      
      // Remove file from list
      function removeFile(index) {
        const dt = new DataTransfer();
        const files = fileInput.files;
        
        for (let i = 0; i < files.length; i++) {
          if (i !== index) {
            dt.items.add(files[i]);
          }
        }
        
        fileInput.files = dt.files;
        updateFileList();
      }
      
      // Get appropriate icon for file type
      function getFileIcon(filename) {
        const extension = filename.split('.').pop().toLowerCase();
        
        const iconMap = {
          'pdf': 'fas fa-file-pdf',
          'doc': 'fas fa-file-word',
          'docx': 'fas fa-file-word',
          'xls': 'fas fa-file-excel',
          'xlsx': 'fas fa-file-excel',
          'ppt': 'fas fa-file-powerpoint',
          'pptx': 'fas fa-file-powerpoint',
          'jpg': 'fas fa-file-image',
          'jpeg': 'fas fa-file-image',
          'png': 'fas fa-file-image',
          'gif': 'fas fa-file-image',
          'zip': 'fas fa-file-archive',
          'rar': 'fas fa-file-archive',
          'txt': 'fas fa-file-alt'
        };
        
        return iconMap[extension] || 'fas fa-file';
      }
      
      // Cancel button
      document.getElementById('cancelButton').addEventListener('click', function() {
        if (confirm('Are you sure you want to cancel? All entered data will be lost.')) {
          window.location.href = '/tickets';
        }
      });
      
      // Continue button for ticket type selection
      document.getElementById('continueButton').addEventListener('click', function() {
        const ticketType = document.getElementById('ticketType').value;
        
        if (ticketType === 'GeneralTicket') {
          // Already showing general ticket form
          return;
        }
        
        // Redirect to specialized ticket form
        window.location.href = `/tickets/new/${ticketType.toLowerCase()}`;
      });
      
      // Mobile menu toggle
      document.getElementById('mobileMenuToggle').addEventListener('click', function() {
        document.getElementById('sidebar').classList.toggle('open');
      });

      // Form validation and submission
      ticketForm.addEventListener('submit', function(event) {
        event.preventDefault();
        
        // Check form validity
        if (!ticketForm.checkValidity()) {
          event.stopPropagation();
          ticketForm.classList.add('was-validated');
          
          // Show alert for validation error
          showAlert('Please fill in all required fields.', 'danger');
          return;
        }
        
        // Create FormData object for file upload
        const formData = new FormData(ticketForm);
        
        // Add ticket type
        formData.append('ticketType', document.getElementById('ticketType').value);
        formData.delete('priority');

        // Add priority
        const priorityInput = document.querySelector('input[name="priority"]:checked');
        formData.append('priority', priorityInput ? priorityInput.value : 'Medium');

        // Show loading overlay
        loadingOverlay.style.display = 'flex';
        submitButton.disabled = true;
        
        // Send form data to server using fetch API
     // Send form data to server using fetch API
            fetch('/tickets/newticket', {
              method: 'POST',
              body: formData,
            })
            .then(response => {
              if (!response.ok) {
                throw new Error(`Server responded with status: ${response.status}`);
              }
              return response.json(); // Make sure to parse the JSON response
            })
            .then(data => {
              // Show success message
              showAlert('Ticket created successfully! Redirecting to tickets page...', 'success');

              // Reset form
              ticketForm.reset();
              fileList.innerHTML = '';
              ticketForm.classList.remove('was-validated');

              // Optional redirect
              setTimeout(() => {
                window.location.href = `/tickets`;
              }, 2000);
            })
            .catch(error => {
              console.error('Error creating ticket:', error);
              showAlert('Error creating ticket. Please try again later.', 'danger');
            })
            .finally(() => {
              // Always hide the overlay and re-enable the button
              loadingOverlay.style.display = 'none';
              submitButton.disabled = false;
            });
      });
      
      // Function to show alert
      function showAlert(message, type) {
        alertMessage.innerText = message;
        alertContainer.querySelector('.alert').className = `alert alert-${type} alert-dismissible fade show`;
        alertContainer.style.display = 'block';
        loadingOverlay.style.display = 'none';
        submitButton.disabled = false;

        // Auto hide after 5 seconds
        // setTimeout(() => {
        //   const bsAlert = new bootstrap.Alert(alertContainer.querySelector('.alert'));
        //   bsAlert.close();
        // }, 5000);
      }
    });
  </script>

  <style>
    .file-upload-area {
      cursor: pointer;
      transition: all 0.3s;
      border: 2px dashed #dee2e6;
    }
    
    .file-upload-area:hover {
      border-color: #0d6efd;
      background-color: rgba(13, 110, 253, 0.05);
    }
    
    .btn-check:checked + .btn-outline-success {
      background-color: var(--bs-success);
      color: white;
    }
    
    .btn-check:checked + .btn-outline-warning {
      background-color: var(--bs-warning);
      color: white;
    }
    
    .btn-check:checked + .btn-outline-danger {
      background-color: var(--bs-danger);
      color: white;
    }
    
    .list-group-item {
      transition: all 0.2s;
    }
    
    .remove-file {
      opacity: 0;
      transition: opacity 0.2s;
    }
    
    .list-group-item:hover .remove-file {
      opacity: 1;
    }

    /* Loading overlay styles */
    #loadingOverlay {
      backdrop-filter: blur(2px);
    }
  </style>
</body>
</html>